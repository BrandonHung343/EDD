import time
import wiringpi
import sys
import time
import serial
import RPi.GPIO as GPIO

# This gets the Qt stuff

#install these programs on your RPi when you get the chance

from PyQt5.QtWidgets import *
 
import mainwindow_auto
# This is our window from QtCreator
changing = false
class MainWindow(QMainWindow, mainwindow_auto.Ui_MainWindow):
# create class for our Raspberry Pi GUI
def changeButton(self):
changing = True

def __init__(self):
# access variables inside of the UI's file
 super(self.__class__, self).__init__()
 self.setupUi(self) 
# gets defined in the UI file


def main():
	app = QApplication(sys.argv)
	#new app instance
	form = MainWindow()
	form.show()
	sys.exit(app.exec_())
	#prevent app from self-closing

	wiringpi.wiringPiSetupGpio()
	wiringpi.pinMode(16, wiringpi.GPIO.PWM_OUTPUT)
	#sets pin 16 to PWM

	wiringpi.pwmSetMode(wiringpi.GPIO.PWM_MODE_MS)
	#sets to milliseconds

	itemOne, itemTwo, itemThree, itemFour, itemFive, itemSix = none

	shelfItems = {1 : itemOne, 2 : itemTwo, 3 : itemThree, 4 : itemFour, 5 : itemFive, 6 : itemSix}

GPIO.setmode(GPIO.BCM)
 
Tag1 = str('1800387799CE')
GPIO.setup(23,GPIO.OUT)
GPIO.setup(24,GPIO.OUT)
GPIO.output(23,False)
GPIO.output(24,False)
PortRF = serial.Serial('/dev/ttyAMA0',9600)
while True:
    ID = ""
    read_byte = PortRF.read()
    if read_byte=="\x02":
        for Counter in range(12):
            read_byte=PortRF.read()
            ID = ID + str(read_byte)
            print hex(ord( read_byte))
        print ID
        if ID == Tag1:
            print "matched"
            GPIO.output(23,True)
            GPIO.output(24,False)
            time.sleep(5)
            GPIO.output(23,False)
        else:
            GPIO.output(23,False)
            print "Access Denied"
            GPIO.output(24,True)
            time.sleep(5)
            GPIO.output(24,False)

def pairing():
	#if the button is pressed to change something
	while changing == True:
#bring home rpi


	 








if __name__ == '__main__':
  main()